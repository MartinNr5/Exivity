<?xml  version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"   "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0" >
<!-- Generated via Iro -->
<dict>
  <key>fileTypes</key>
  <array> 
    <string>use</string>
    <string>usescript</string>
   </array>
  <key>name</key>
  <string>exivityuse</string>
  <key>patterns</key>
  <array> 
    <dict>
      <key>include</key>
      <string>#main</string>
    </dict>
   </array>
  <key>scopeName</key>
  <string>source.exivityuse</string>
  <key>uuid</key>
  <string></string>
  <key>repository</key>
  <dict>
    <key>main</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>(#.*)</string>
          <key>name</key>
          <string>comment.line.number-sign.exivityuse</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\.\[.+\])</string>
          <key>name</key>
          <string>support.type.exivityuse</string>
        </dict>
        <dict>
          <key>begin</key>
          <string>((var\s)|(public var\s))</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>storage.type.exivityuse</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>variable.other.readwrite.exivityuse</string>
          <key>end</key>
          <string>(\s)</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>variable.other.readwrite.exivityuse</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>match</key>
          <string>((aws_sign_string|basename|buffer|clear|csv|decimal_to_ipv4|discard|encode|encrypt|environment|exit_loop|foreach|generate_jwt|get_last_day_of|gosub|gunzip|hash|http|if|ipv4_to_decimal|json|loglevel|loop|lowercase|match|pause|return|save|set|subroutine|terminate|unzip|uppercase|uri|else|){1}\s)</string>
          <key>name</key>
          <string>keyword.exivityuse</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(@(MIN|MAX|ROUND|CONCAT|SUBSTR|STRLEN|PAD|EXTRACT_BEFORE|EXTRACT_AFTER|CURDATE|DATEADD|DATEDIFF|DTADD|){1})</string>
          <key>name</key>
          <string>support.function.exivityuse</string>
        </dict>
        <dict>
          <key>match</key>
          <string>((encode-component|INFO|DEBUG|DEBUGX|WARN|ERROR|FATAL|using|as|http_headers|add_headers|fix_headers|write_fields|write_field|close|http_secure|http_header|http_savefile|with error){1}\s)</string>
          <key>name</key>
          <string>keyword.other.option.exivityuse</string>
        </dict>
        <dict>
          <key>match</key>
          <string>((GET|POST|PUT|DELETE){1})</string>
          <key>name</key>
          <string>keyword.other.option.exivityuse</string>
        </dict>
        <dict>
          <key>begin</key>
          <string>(print\s{1})</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.exivityuse</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>string.quoted.double.exivityuse</string>
          <key>end</key>
          <string>($)</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>string.quoted.double.exivityuse</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>begin</key>
          <string>(&quot;)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.exivityuse</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>string.quoted.double.exivityuse</string>
          <key>end</key>
          <string>(&quot;)</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.exivityuse</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>begin</key>
          <string>(\$\{)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>variable.other.readwrite.exivityuse</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>variable.other.readwrite.exivityuse</string>
          <key>end</key>
          <string>(\})</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>variable.other.readwrite.exivityuse</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>match</key>
          <string>(\.|,|\{|\}|\[|\]|\(|\)|=|-|\%|:|!|\+|&lt;|&gt;|\||\\|\*|Â¤|%|\/)</string>
          <key>name</key>
          <string>keyword.operator.exivityuse</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\d+)</string>
          <key>name</key>
          <string>constant.numeric.exivityuse</string>
        </dict>
        <dict>
          <key>begin</key>
          <string>(\$JSON\{)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>support.type.exivityuse</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>support.type.exivityuse</string>
          <key>end</key>
          <string>(\})</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>support.type.exivityuse</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>begin</key>
          <string>(\$JSON\()</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>support.type.exivityuse</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>support.type.exivityuse</string>
          <key>end</key>
          <string>(\))</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>support.type.exivityuse</string>
            </dict>
          </dict>
        </dict>
       </array>
    </dict>
    <key>main__1</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>main__2</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>main__3</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>main__4</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>main__5</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>main__6</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
  </dict>
</dict>
</plist>
